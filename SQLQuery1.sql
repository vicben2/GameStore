CREATE DATABASE GAMESTOREDB;

USE GAMESTOREDB;

--tables
CREATE TABLE STORE_USER (
 	USER_ID INT PRIMARY KEY IDENTITY(1,1) NOT NULL,
  	USER_TYPE VARCHAR(100) NOT NULL,
  	EMAIL VARCHAR(50) NOT NULL,
  	PASSWORD VARCHAR(50) NOT NULL,
  	USERNAME VARCHAR(30) NOT NULL,
  	FNAME VARCHAR(50) NOT NULL,
  	LNAME VARCHAR(50) NOT NULL,
  	PROFILE_PIC VARCHAR(500),
  	BIO VARCHAR(500),
  	PROFILE_PAGE TEXT,
  	REGISTRATION_DATE DATETIME NOT NULL DEFAULT GETDATE(),
  	DATE_OF_BIRTH DATE NOT NULL
);

CREATE TABLE GAME (
	GAME_ID INT PRIMARY KEY IDENTITY(1,1) NOT NULL,
  	GAME_TITLE VARCHAR(50) NOT NULL,
  	GAME_DESC VARCHAR(300) NOT NULL,
	GAME_IMG VARCHAR(200) NOT NULL,
  	PUB_DATE DATETIME NOT NULL DEFAULT GETDATE(),
  	PRICE MONEY NOT NULL,
	DEV_ID INT NOT NULL,
	FOREIGN KEY(DEV_ID) REFERENCES STORE_USER(USER_ID),
	ISACTIVE INT NOT NULL DEFAULT 1
);

CREATE TABLE PAYMENT (
 	PAYMENT_ID INT PRIMARY KEY IDENTITY(1,1) NOT NULL,
  	PAYMENT_METHOD VARCHAR(50) NOT NULL
);

CREATE TABLE ORDER_HEADER (
 	ORDER_HEADER_ID INT PRIMARY KEY IDENTITY(1,1) NOT NULL,
	PAYMENT_ID INT NOT NULL, FOREIGN KEY(PAYMENT_ID) REFERENCES PAYMENT(PAYMENT_ID),
	PLAYER_ID INT NOT NULL, FOREIGN KEY(PLAYER_ID) REFERENCES STORE_USER(USER_ID),
  	ORDER_DATE DATETIME NOT NULL,
  	TOTAL_PRICE MONEY NOT NULL
);

CREATE TABLE REVIEW (
 	REVIEW_ID INT PRIMARY KEY IDENTITY(1,1) NOT NULL,
	GAME_ID INT NOT NULL, FOREIGN KEY (GAME_ID) REFERENCES GAME(GAME_ID),
	PLAYER_ID INT NOT NULL,	FOREIGN KEY (PLAYER_ID) REFERENCES STORE_USER(USER_ID),
	ORDER_HEADER_ID INT NOT NULL, FOREIGN KEY (ORDER_HEADER_ID) REFERENCES ORDER_HEADER(ORDER_HEADER_ID)
);

CREATE TABLE ORDER_DETAIL (
 	ORDER_DETAIL_ID INT PRIMARY KEY IDENTITY(1,1) NOT NULL,
	ORDER_HEADER_ID INT NOT NULL, FOREIGN KEY (ORDER_HEADER_ID) REFERENCES ORDER_HEADER(ORDER_HEADER_ID),
	GAME_ID INT NOT NULL, FOREIGN KEY (GAME_ID) REFERENCES GAME(GAME_ID),
  	QTY INT NOT NULL,
  	PRICE MONEY NOT NULL,
  	LINE_TOTAL MONEY NOT NULL
);

CREATE TABLE GENRE (
 	GENRE_ID INT PRIMARY KEY IDENTITY(1,1) NOT NULL,
  	GENRE VARCHAR(30) NOT NULL
);

CREATE TABLE GENRE_GAME (
	GENRE_ID INT NOT NULL, GAME_ID INT NOT NULL,
  	PRIMARY KEY (GENRE_ID, GAME_ID),
  	FOREIGN KEY (GENRE_ID) REFERENCES GENRE(GENRE_ID),
  	FOREIGN KEY (GAME_ID) REFERENCES GAME(GAME_ID)
);

INSERT INTO PAYMENT(PAYMENT_METHOD)
VALUES
('CREDIT CARD'),
('PAYPAL'),
('GCASH'),
('CRYPTO')

INSERT INTO GENRE(GENRE)
VALUES
('ADVENTURE'),
('FANTASY'),
('FIRST PERSON SHOOTER'),
('SANDBOX'),
('STRATEGY'),
('ACTION'),
('MOBA'),
('MMO')

INSERT INTO STORE_USER(USER_TYPE, EMAIL, PASSWORD, USERNAME, FNAME, LNAME, PROFILE_PIC, BIO, PROFILE_PAGE, DATE_OF_BIRTH)
VALUES
('ADMIN','admin@game.store','testtest','john','John','Admin','','Administrator','','2004-12-01')

--stored procedures
CREATE PROCEDURE SP_GET_GAMES_GENRES
	@COUNT INT
AS
BEGIN
	SELECT TOP (@COUNT) 
    GA.GAME_TITLE, 
    STUFF((
        SELECT ', ' + GR.GENRE
        FROM GENRE_GAME GG
        JOIN GENRE GR ON GG.GENRE_ID = GR.GENRE_ID
        WHERE GG.GAME_ID = GA.GAME_ID
        FOR XML PATH(''), TYPE).value('.', 'NVARCHAR(MAX)'), 1, 2, '') AS GENRES
FROM GAME GA
GROUP BY GA.GAME_TITLE, GA.GAME_ID
END

CREATE PROCEDURE SP_GET_GAMES
	@COUNT INT
AS
BEGIN
	SELECT TOP (@COUNT) * FROM GAME
END

CREATE PROCEDURE SP_GET_USERS_BY_USERNAME
	@USERNAME VARCHAR(30)
AS
BEGIN
	SELECT * FROM STORE_USER
	WHERE USERNAME = @USERNAME
END

CREATE PROCEDURE SP_SIGNUP_USER
	@USERNAME VARCHAR(30),
	@PASSWORD VARCHAR(50),
	@USER_TYPE VARCHAR(100),
	@EMAIL VARCHAR(50),
	@FNAME VARCHAR(50),
	@LNAME VARCHAR(50),
	@DATE_OF_BIRTH DATETIME
AS
BEGIN
	INSERT INTO STORE_USER(USER_TYPE, EMAIL, PASSWORD, USERNAME, FNAME, LNAME, DATE_OF_BIRTH)
	VALUES
	(@USER_TYPE, @EMAIL, @PASSWORD, @USERNAME , @FNAME, @LNAME, @DATE_OF_BIRTH)
END

CREATE PROCEDURE SP_LOGIN_USER
	@USERNAME VARCHAR(30),
	@PASSWORD VARCHAR(50)
AS
BEGIN
	SELECT * FROM STORE_USER
	WHERE USERNAME = @USERNAME AND PASSWORD = @PASSWORD
END

CREATE PROCEDURE SP_ADD_GAME
	@DEV_ID INT,
	@GAME_TITLE VARCHAR(50),
	@GAME_DESC VARCHAR(300),
	@PRICE MONEY,
	@GAME_IMG VARCHAR(200),
	@GENRE VARCHAR(100)
AS
BEGIN
	INSERT INTO GAME(DEV_ID, GAME_TITLE, GAME_DESC, GAME_IMG, PRICE)
	VALUES
	(@DEV_ID, @GAME_TITLE, @GAME_DESC, @GAME_IMG, @PRICE);

	DECLARE @NEWGAMEID INT
	SET @NEWGAMEID = SCOPE_IDENTITY()

	INSERT INTO GENRE_GAME(GAME_ID, GENRE_ID)
	VALUES
	(@NEWGAMEID, (SELECT GENRE_ID FROM GENRE WHERE GENRE = @GENRE))
END

CREATE PROCEDURE SP_GET_ALL_GAMES_COUNT
AS
BEGIN
	SELECT COUNT(GAME_ID) AS GAMES_COUNT FROM GAME
END

CREATE PROCEDURE SP_GET_ALL_USERS_COUNT
AS
BEGIN
	SELECT COUNT(USER_ID) AS USERS_COUNT FROM STORE_USER
END

CREATE PROCEDURE SP_GET_DEV_COUNT
AS
BEGIN
	SELECT COUNT(USER_ID) AS DEV_COUNT FROM STORE_USER
	WHERE USER_TYPE = 'DEV'
END

CREATE PROCEDURE SP_UPDATE_PROFILE
	@USERID INT,
    @EMAIL VARCHAR(50),
    @FNAME VARCHAR(50),
    @LNAME VARCHAR(50),
    @DATE_OF_BIRTH DATETIME,
	@BIO VARCHAR(500),
	@PROFILE_PIC VARCHAR(500)
AS
BEGIN
	UPDATE STORE_USER
	SET EMAIL=@EMAIL, FNAME=@FNAME, LNAME=@LNAME, DATE_OF_BIRTH=@DATE_OF_BIRTH, BIO=@BIO, PROFILE_PIC=@PROFILE_PIC
	WHERE USER_ID = @USERID
END

CREATE PROCEDURE SP_GET_USER
	@USERID INT
AS
BEGIN
	SELECT * FROM STORE_USER
	WHERE USER_ID = @USERID
END

CREATE PROCEDURE SP_GET_GAMES_BY_DEV
	@USERID INT
AS
BEGIN
	SELECT * FROM GAME
	WHERE DEV_ID = @USERID
END

CREATE PROCEDURE SP_GET_GENRES
AS
BEGIN
	SELECT GENRE FROM GENRE
END

CREATE PROCEDURE SP_GET_GENRES_BY_GAME
	@GAME_ID INT
AS
BEGIN
	SELECT GA.GAME_TITLE, GR.GENRE FROM GAME GA
	JOIN GENRE_GAME GG ON GA.GAME_ID = GG.GAME_ID
	JOIN GENRE GR ON GG.GENRE_ID = GR.GENRE_ID
	WHERE GA.GAME_ID = @GAME_ID
END

CREATE PROCEDURE SP_UPDATE_GAME
	@GAME_ID INT,
	@GAME_TITLE VARCHAR(50),
	@GAME_DESC VARCHAR(300),
	@PRICE MONEY,
	@GENRE VARCHAR(100)
AS
BEGIN
	UPDATE GAME
	SET GAME_TITLE=@GAME_TITLE, GAME_DESC=@GAME_DESC, PRICE=@PRICE
	WHERE GAME_ID = @GAME_ID;

	UPDATE GENRE_GAME
	SET GENRE_ID = (SELECT GENRE_ID FROM GENRE WHERE GENRE = @GENRE)
	WHERE GAME_ID = @GAME_ID
END

SELECT * FROM GENRE
SELECT * FROM GAME
SELECT * FROM STORE_USER
SELECT * FROM GENRE_GAME
SELECT * FROM PAYMENT
